generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    name      String?
    email     String    @unique
    image     String?
    expireAt  DateTime?
    paid      Boolean   @default(false)
    createdAt DateTime  @default(now())
    payments  Payment[] @relation("UserPayments")
    courses   Course[]
}

model Hitbullseye {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    data Json
}

enum Course {
    C1011
    C1012
}

enum PaymentStatus {
    PENDING
    SUCCESS
    FAILED
}

model Payment {
    id                  String        @id @default(auto()) @map("_id") @db.ObjectId
    razorpay_payment_id String?
    razorpay_signature  String?
    razorpay_order_id   String
    status              PaymentStatus @default(PENDING)
    userId              String        @map("user_id") @db.ObjectId
    user                User          @relation("UserPayments", fields: [userId], references: [id])
}

// Other Schema Model
// model Customer {
//     id            String    @id @default(auto()) @map("_id") @db.ObjectId
//     name          String?
//     email         String    @unique
//     image         String?
//     emailVerified DateTime?
//     paid          Boolean   @default(false)
//     createdAt     DateTime  @default(now())
//     accounts      Account[]
//     sessions      Session[]
//     payments      Payment[]
// }

// model Account {
//     id                String   @id @default(auto()) @map("_id") @db.ObjectId
//     customerId        String   @db.ObjectId
//     type              String
//     provider          String
//     providerAccountId String
//     refresh_token     String?  @db.String
//     access_token      String?  @db.String
//     expires_at        Int?
//     token_type        String?
//     scope             String?
//     id_token          String?  @db.String
//     session_state     String?
//     customer          Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

//     @@unique([provider, providerAccountId])
// }

// model Session {
//     id           String   @id @default(auto()) @map("_id") @db.ObjectId
//     sessionToken String   @unique
//     customerId   String   @db.ObjectId
//     expires      DateTime
//     customer     Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
// }

// model VerificationToken {
//     id         String   @id @default(auto()) @map("_id") @db.ObjectId
//     identifier String
//     token      String   @unique
//     expires    DateTime

//     @@unique([identifier, token])
// }

// model Hitbullseye {
//     id   String @id @default(auto()) @map("_id") @db.ObjectId
//     data Json
// }

// enum Course {
//     C1011
//     C1012
// }

// model Payment {
//     id                  String   @id @default(auto()) @map("_id") @db.ObjectId
//     razorpay_payment_id String   @db.String
//     razorpay_order_id   String   @db.String
//     razorpay_signature  String   @db.String
//     customerId          String   @db.ObjectId
//     customer            Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
// }
